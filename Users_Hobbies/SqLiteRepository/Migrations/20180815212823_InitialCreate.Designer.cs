// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SqLiteRepository;

namespace SqLiteRepository.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20180815212823_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("Models.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HobbyNameId");

                    b.Property<int>("HobbyTypeId");

                    b.HasKey("Id");

                    b.HasIndex("HobbyNameId");

                    b.HasIndex("HobbyTypeId");

                    b.ToTable("Hobbies");
                });

            modelBuilder.Entity("Models.HobbyName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("HobbyNames");
                });

            modelBuilder.Entity("Models.HobbyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("HobbyTypes");
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("BirthDay");

                    b.Property<string>("Name");

                    b.Property<string>("Sex");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Models.UserHobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HobbyId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("HobbyId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHobbies");
                });

            modelBuilder.Entity("Models.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CurrHobby");

                    b.Property<string>("CurrType");

                    b.Property<int?>("CurrUserId");

                    b.HasKey("Id");

                    b.HasIndex("CurrUserId");

                    b.ToTable("List_Users");
                });

            modelBuilder.Entity("Models.Hobby", b =>
                {
                    b.HasOne("Models.HobbyName", "HobbyNames")
                        .WithMany()
                        .HasForeignKey("HobbyNameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Models.HobbyType", "HobbyTypes")
                        .WithMany()
                        .HasForeignKey("HobbyTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Models.UserHobby", b =>
                {
                    b.HasOne("Models.Hobby", "CurrHobby")
                        .WithMany()
                        .HasForeignKey("HobbyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Models.User")
                        .WithMany("UserHobbies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Models.UserInfo", b =>
                {
                    b.HasOne("Models.User", "CurrUser")
                        .WithMany()
                        .HasForeignKey("CurrUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
